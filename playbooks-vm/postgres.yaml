---
- hosts: db-server-vm
  become: yes
  become_user: root


  pre_tasks:

    #  Εγκαθιστά τα πακέτα postgresql-contrib και postgresql-client μέσω apt, ενημερώνοντας πρώτα το cache.
    - name: Install the PostgreSQL package
      apt:
        name: ["postgresql-contrib", "postgresql-client"]
        state: present
        update_cache: yes

    # Εγκαθιστά το πακέτο python3-pip μέσω apt και ενημερώνει το cache.
    - name: install pip3
      apt:
        name: ["python3-pip"]
        state: present
        update_cache: yes

    # Εγκαθιστά το πακέτο python3-psycopg2 για να μπορούν να χρησιμοποιηθούν οι PostgreSQL modules του Ansible.
    - name: Install psycopg2 for Ansible PostgreSQL modules
      apt:
        name: python3-psycopg2
        state: present

    # Εκτελεί lsb_release -rs για να ανακτήσει την έκδοση του Ubuntu και καταγράφει το αποτέλεσμα στη μεταβλητή ubuntu_version.
    - name: Get Ubuntu version
      command: lsb_release -rs
      register: ubuntu_version
      changed_when: false
      check_mode: false

    # Εκτυπώνει μήνυμα debug με την τιμή της μεταβλητής ubuntu_version.
    - name: debug ubuntu version
      ansible.builtin.debug:
        msg: "ubuntu version debug {{ubuntu_version}}"

    # Θέτει τη fact postgres_version σε 14 αν η έκδοση Ubuntu είναι 22.04.
    - name: Set PostgreSQL version for Ubuntu 22.04
      set_fact:
        postgres_version: 14
      when: ubuntu_version.stdout == "22.04"

    # Θέτει τη fact postgres_version σε 16 αν η έκδοση Ubuntu είναι 24.04.
    - name: Set PostgreSQL version for Ubuntu 24.04
      set_fact:
        postgres_version: 16
      when: ubuntu_version.stdout == "24.04"

    # Ελέγχει με το module stat αν υπάρχει ο φάκελος /var/lib/postgresql/14/main και αποθηκεύει το αποτέλεσμα σε postgres_data.
    - name: check if postgres is initialized
      ansible.builtin.stat:
        path: /var/lib/postgresql/{{ postgres_version }}/main
      register: postgres_data

    # Εκτυπώνει μήνυμα debug με την τιμή της μεταβλητής postgres_data.
    - name: debug stat
      ansible.builtin.debug:
        msg: "postgres data debug {{postgres_data}}"

  tasks:

    #  Ενεργοποιεί τη ρύθμιση listen_addresses = '*' στο postgresql.conf, αντικαθιστώντας το σχόλιο, και ειδοποιεί για επανεκκίνηση.
    - name: edit postgres.config
      lineinfile:
        path: "/etc/postgresql/{{ postgres_version }}/main/postgresql.conf"
        line: "listen_addresses = '*'"
        regexp: "^#listen_addresses = 'localhost'"
        state: present
      notify: restart postgres

    # Προσθέτει entry στον pg_hba.conf ώστε ο χρήστης db.user να συνδέεται από 0.0.0.0/0 με μέθοδο md5 και ειδοποιεί για επανεκκίνηση.
    - name: edit pg_hba.conf
      lineinfile:
        path: /etc/postgresql/{{ postgres_version }}/main/pg_hba.conf
        line: "host all all 0.0.0.0/0 md5"
        create: yes
      notify: restart postgres

    # Ξεκινά και ενεργοποιεί την υπηρεσία postgresql.
    - name: "Start and enable services"
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - postgresql

    - block:

        #  Δημιουργεί τον χρήστη PostgreSQL με όνομα db.user και κωδικό db.password ως χρήστης postgres.
        - name: create postgres user
          postgresql_user:
            name: "{{ db.user }}"
            password: "{{ db.password }}"
          become: yes
          become_user: postgres

        # Δημιουργεί τη βάση db.name με ιδιοκτήτη db.user ως χρήστης postgres.
        - name: create postgres database
          postgresql_db:
            name: "{{ db.name }}"
            owner: "{{ db.user }}"
          become: yes
          become_user: postgres
          
      rescue:

        # Αν αποτύχει το μπλοκ, εγκαθιστά το πακέτο python3-psycopg2 για να επιλυθεί πιθανό σφάλμα εξαρτήσεων.
        - name: apt install psycopg2-binary
          apt:
            name: python3-psycopg2
            state: present
          tags:
            - install

      always:
        # Επαναβεβαιώνει την ύπαρξη του χρήστη PostgreSQL db.user με τον καθορισμένο κωδικό.
        - name: create postgres user
          postgresql_user:
             name: "{{ db.user }}"
             password: "{{ db.password }}"
          become: yes
          become_user: postgres

        # Επαναβεβαιώνει την ύπαρξη της βάσης db.name με ιδιοκτήτη db.user.
        - name: create postgres database
          postgresql_db:
            name: "{{ db.name }}"
            owner: "{{ db.user }}"
          become: yes
          become_user: postgres 

  handlers:
  # Επανεκκινεί την υπηρεσία postgresql όταν κληθεί από κάποιο task.
   - name: restart postgres
     service:
       name: postgresql
       state: restarted

