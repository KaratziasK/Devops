---
- hosts: appserver-vm

  pre_tasks:

    - name: Check if java exists
      command: java -version
      register: java_version
      ignore_errors: yes

    - name: Install Java 
      apt:
          name: openjdk-21-jdk
          state: present
          update_cache: yes
      become: yes
      when: java_version.rc !=0

    - name: Check if Maven is installed
      command: mvn -v
      register: maven_version
      ignore_errors: yes

    - name: Install system Maven
      apt:
        name: maven
        state: present
        update_cache: yes
      become: yes
      when: maven_version.rc != 0

  tasks:

      - name: "Clone the Spring repository"
        git:
            repo: "https://github.com/KaratziasK/DS-project.git"
            dest: "{{ appdir }}"
            version: "{{ branch }}"
            force: yes

      - name: "Populate application.properties for DB"
        lineinfile:
          dest: "{{ application_properties_dir }}"
          state: present
          regexp: "^{{item.key}}="
          line: "{{item.key}}={{item.value}}"
        with_items:
          - "{{ app.env | dict2items }}"
      
      - name: "Populate application.properties with email credentials"
        lineinfile:
          dest: "{{ application_properties_dir }}"
          regexp: "{{ item.regexp }}"
          line: "{{ item.line }}"
          state: present
        with_items:
          - { regexp: '^spring.mail.username=', line: "spring.mail.username={{ EMAIL_USERNAME }}" }
          - { regexp: '^spring.mail.password=', line: "spring.mail.password={{ EMAIL_PASSWORD }}" }


      - name: "Build the Spring application"
        command: mvn clean package -DskipTests
        args:
            chdir: "/tmp/project"

      # - name: "Run the Spring application"
      #   command: "java -jar target/dsproject-0.0.1-SNAPSHOT.jar"
      #   args:
      #       chdir: "{{ appdir }}"

      - name: Check if nginx is installed
        command: nginx -v
        register: nginx_version
        ignore_errors: yes

      - name: "APT - install nginx"
        apt:
          name: nginx
          update_cache: yes
        become: yes
        when: nginx_version.rc != 0

      - name: copy nginx conf file
        template:
          src: ../files/nginx.http.j2
          dest: "/etc/nginx/sites-available/spring"
        become: yes

      - name: enable spring site in nginx
        file:
          src: "/etc/nginx/sites-available/spring"
          dest: "/etc/nginx/sites-enabled/spring"
          state: link
        become: yes
        notify: restart nginx

      - name: de-activate default nginx site
        file:
          path: /etc/nginx/sites-enabled/default
          state: absent
        become: yes
        notify: restart nginx

      - name: copy spring service file
        template:
          src: ../files/spring.service.j2
          dest: "/etc/systemd/system/spring.service"
        become: yes
        become_user: root
        notify: restart spring

      - name: reload spring service
        service:
          name: spring
          state: restarted
        become: yes

      - name: ensure spring service started
        service:
          name: spring
          state: started
          enabled: yes
        become: yes

  handlers:
  - name: restart spring
    service:
      name: spring
      state: restarted
    become: yes

  - name: restart nginx
    service:
      name: nginx
      state: restarted
    become: yes
